// Code generated by terraform-plugin-framework-generator DO NOT EDIT.

package resource_project

import (
	"context"
	"github.com/hashicorp/terraform-plugin-framework/resource/schema/int64default"
	"github.com/hashicorp/terraform-plugin-framework/resource/schema/stringdefault"
	"github.com/hashicorp/terraform-plugin-framework/types"

	"github.com/hashicorp/terraform-plugin-framework/resource/schema"
)

func ProjectResourceSchema(ctx context.Context) schema.Schema {
	return schema.Schema{
		Attributes: map[string]schema.Attribute{
			"allow_query_params": schema.BoolAttribute{
				Optional: true,
				Computed: true,
			},
			"basic_auth_password": schema.StringAttribute{
				Optional: true,
				Computed: true,
			},
			"basic_auth_preview_only": schema.StringAttribute{
				Optional: true,
				Computed: true,
			},
			"basic_auth_username": schema.StringAttribute{
				Optional: true,
				Computed: true,
			},
			"created_at": schema.StringAttribute{
				Computed: true,
			},
			"custom_s3_sync_access_key": schema.StringAttribute{
				Optional: true,
				Computed: true,
			},
			"custom_s3_sync_bucket": schema.StringAttribute{
				Optional: true,
				Computed: true,
			},
			"custom_s3_sync_region": schema.StringAttribute{
				Optional: true,
				Computed: true,
			},
			"custom_s3_sync_secret_key": schema.StringAttribute{
				Optional: true,
				Computed: true,
			},
			"deleted_at": schema.StringAttribute{
				Computed: true,
			},
			"fastly_migrated": schema.Int64Attribute{
				Computed: true,
				Default:  int64default.StaticInt64(1),
			},
			"git_url": schema.StringAttribute{
				Computed: true,
			},
			"id": schema.Int64Attribute{
				Computed: true,
			},
			"machine_name": schema.StringAttribute{
				Computed: true,
			},
			"name": schema.StringAttribute{
				Required: true,
			},
			"organization": schema.StringAttribute{
				Optional: true,
				Computed: true,
			},
			"organization_id": schema.Int64Attribute{
				Computed: true,
			},
			"parent_project_id": schema.Int64Attribute{
				Computed: true,
			},
			"project": schema.StringAttribute{
				Optional: true,
				Computed: true,
			},
			"project_type": schema.StringAttribute{
				Computed: true,
				Default:  stringdefault.StaticString("normal"),
			},
			"region": schema.StringAttribute{
				Optional: true,
				Computed: true,
				Default:  stringdefault.StaticString("au"),
			},
			"security_score": schema.StringAttribute{
				Computed: true,
			},
			"updated_at": schema.StringAttribute{
				Computed: true,
			},
			"uuid": schema.StringAttribute{
				Computed: true,
			},
		},
	}
}

type ProjectModel struct {
	AllowQueryParams      types.Bool   `tfsdk:"allow_query_params"`
	BasicAuthPassword     types.String `tfsdk:"basic_auth_password"`
	BasicAuthPreviewOnly  types.String `tfsdk:"basic_auth_preview_only"`
	BasicAuthUsername     types.String `tfsdk:"basic_auth_username"`
	CreatedAt             types.String `tfsdk:"created_at"`
	CustomS3SyncAccessKey types.String `tfsdk:"custom_s3_sync_access_key"`
	CustomS3SyncBucket    types.String `tfsdk:"custom_s3_sync_bucket"`
	CustomS3SyncRegion    types.String `tfsdk:"custom_s3_sync_region"`
	CustomS3SyncSecretKey types.String `tfsdk:"custom_s3_sync_secret_key"`
	DeletedAt             types.String `tfsdk:"deleted_at"`
	FastlyMigrated        types.Int64  `tfsdk:"fastly_migrated"`
	GitUrl                types.String `tfsdk:"git_url"`
	Id                    types.Int64  `tfsdk:"id"`
	MachineName           types.String `tfsdk:"machine_name"`
	Name                  types.String `tfsdk:"name"`
	Organization          types.String `tfsdk:"organization"`
	OrganizationId        types.Int64  `tfsdk:"organization_id"`
	ParentProjectId       types.Int64  `tfsdk:"parent_project_id"`
	Project               types.String `tfsdk:"project"`
	ProjectType           types.String `tfsdk:"project_type"`
	Region                types.String `tfsdk:"region"`
	SecurityScore         types.String `tfsdk:"security_score"`
	UpdatedAt             types.String `tfsdk:"updated_at"`
	Uuid                  types.String `tfsdk:"uuid"`
}
