// Code generated by terraform-plugin-framework-generator DO NOT EDIT.

package resource_rule_redirect

import (
	"context"
	"github.com/hashicorp/terraform-plugin-framework-validators/stringvalidator"
	"github.com/hashicorp/terraform-plugin-framework/resource/schema/booldefault"
	"github.com/hashicorp/terraform-plugin-framework/resource/schema/stringdefault"
	"github.com/hashicorp/terraform-plugin-framework/schema/validator"
	"github.com/hashicorp/terraform-plugin-framework/types"

	"github.com/hashicorp/terraform-plugin-framework/resource/schema"
)

func RuleRedirectResourceSchema(ctx context.Context) schema.Schema {
	return schema.Schema{
		Attributes: map[string]schema.Attribute{
			"config": schema.StringAttribute{
				Computed: true,
			},
			"country": schema.StringAttribute{
				Optional: true,
				Computed: true,
				Validators: []validator.String{
					stringvalidator.OneOf(
						"country_is",
						"country_is_not",
					),
				},
			},
			"country_is": schema.ListAttribute{
				ElementType: types.StringType,
				Optional:    true,
				Computed:    true,
			},
			"country_is_not": schema.ListAttribute{
				ElementType: types.StringType,
				Optional:    true,
				Computed:    true,
			},
			"disabled": schema.BoolAttribute{
				Optional: true,
				Computed: true,
				Default:  booldefault.StaticBool(false),
			},
			"domain": schema.StringAttribute{
				Optional: true,
				Computed: true,
				Default:  stringdefault.StaticString("any"),
			},
			"ip": schema.StringAttribute{
				Optional: true,
				Computed: true,
				Validators: []validator.String{
					stringvalidator.OneOf(
						"ip_is",
						"ip_is_not",
					),
				},
			},
			"ip_is": schema.ListAttribute{
				ElementType: types.StringType,
				Optional:    true,
				Computed:    true,
			},
			"ip_is_not": schema.ListAttribute{
				ElementType: types.StringType,
				Optional:    true,
				Computed:    true,
			},
			"method": schema.StringAttribute{
				Optional: true,
				Computed: true,
				Validators: []validator.String{
					stringvalidator.OneOf(
						"method_is",
						"method_is_not",
					),
				},
			},
			"method_is": schema.ListAttribute{
				ElementType: types.StringType,
				Optional:    true,
				Computed:    true,
			},
			"method_is_not": schema.ListAttribute{
				ElementType: types.StringType,
				Optional:    true,
				Computed:    true,
			},
			"name": schema.StringAttribute{
				Optional: true,
				Computed: true,
			},
			"organization": schema.StringAttribute{
				Optional: true,
				Computed: true,
			},
			"project": schema.StringAttribute{
				Optional: true,
				Computed: true,
			},
			"rule": schema.StringAttribute{
				Optional: true,
				Computed: true,
			},
			"urls": schema.ListAttribute{
				ElementType: types.StringType,
				Optional:    true,
				Computed:    true,
			},
			"uuid": schema.StringAttribute{
				Computed: true,
			},
		},
	}
}

type RuleRedirectModel struct {
	Config       types.String `tfsdk:"config"`
	Country      types.String `tfsdk:"country"`
	CountryIs    types.List   `tfsdk:"country_is"`
	CountryIsNot types.List   `tfsdk:"country_is_not"`
	Disabled     types.Bool   `tfsdk:"disabled"`
	Domain       types.String `tfsdk:"domain"`
	Ip           types.String `tfsdk:"ip"`
	IpIs         types.List   `tfsdk:"ip_is"`
	IpIsNot      types.List   `tfsdk:"ip_is_not"`
	Method       types.String `tfsdk:"method"`
	MethodIs     types.List   `tfsdk:"method_is"`
	MethodIsNot  types.List   `tfsdk:"method_is_not"`
	Name         types.String `tfsdk:"name"`
	Organization types.String `tfsdk:"organization"`
	Project      types.String `tfsdk:"project"`
	Rule         types.String `tfsdk:"rule"`
	Urls         types.List   `tfsdk:"urls"`
	Uuid         types.String `tfsdk:"uuid"`
}
